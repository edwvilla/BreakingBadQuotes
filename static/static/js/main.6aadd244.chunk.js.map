{"version":3,"sources":["quotes/MultipleCustomHooks.js","quotes/useCounter.js","quotes/useFetch.js","index.js"],"names":["MultipleCustomHooks","initialState","useState","state","setState","increment","decrement","reset","useCounter","counter","url","data","loading","error","useEffect","fetch","then","res","json","useFetch","author","quote","className","onClick","ReactDOM","render","document","getElementById"],"mappings":"oKAIaA,EAAsB,WAAO,IAAD,ECFf,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EACrBC,mBAASD,GADY,mBACxCE,EADwC,KACjCC,EADiC,KAS/C,MAAO,CACLD,QACAE,UARgB,kBAAMD,EAASD,EAAQ,IASvCG,UAPgB,kBAAMF,EAASD,EAAQ,IAQvCI,MANY,kBAAMH,EAASH,KDJSO,CAAW,GAAlCC,EADwB,EAC/BN,MAAgBE,EADe,EACfA,UADe,EEFjB,SAACK,GAAS,IAAD,EACLR,mBAAS,CACjCS,KAAM,KACNC,SAAS,EACTC,MAAO,OAJsB,mBACxBV,EADwB,KACjBC,EADiB,KAkB/B,OAXAU,qBAAU,WACRV,EAAS,CACPO,KAAM,KACNC,SAAS,EACTC,MAAO,OAETE,MAAML,GACHM,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACL,GAAD,OAAUP,EAAS,CAAEO,OAAMC,SAAS,EAAOC,MAAO,YACzD,CAACH,IAEGP,EFbmBgB,CAAS,6CAAD,OACaV,IADvCG,EAH+B,EAG/BA,QAASD,EAHsB,EAGtBA,KAHsB,IAOXA,GAAQA,EAAK,GAAjCS,EAP+B,EAO/BA,OAAQC,EAPuB,EAOvBA,MAEhB,OACE,gCACE,qDACA,uBACCT,EACC,qBAAKU,UAAU,+BAAf,wBAEA,6BAAYA,UAAU,wBAAtB,UACE,mBAAGA,UAAU,OAAb,SAAqBD,IACrB,wBAAQC,UAAU,oBAAlB,SAAuCF,OAI3C,wBAAQE,UAAU,kBAAkBC,QAASlB,EAA7C,4B,MGpBNmB,IAASC,OAAO,cAAC,EAAD,IAAyBC,SAASC,eAAe,W","file":"static/js/main.6aadd244.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useCounter } from \"./useCounter\";\r\nimport { useFetch } from \"./useFetch\";\r\n\r\nexport const MultipleCustomHooks = () => {\r\n  const { state: counter, increment } = useCounter(1);\r\n\r\n  const { loading, data } = useFetch(\r\n    `https://www.breakingbadapi.com/api/quotes/${counter}`\r\n  );\r\n\r\n  const { author, quote } = !!data && data[0]; //check if hasData\r\n\r\n  return (\r\n    <div>\r\n      <h1>Breaking bad quotes</h1>\r\n      <hr />\r\n      {loading ? (\r\n        <div className=\"alert alert-info text-center\">Loading...</div>\r\n      ) : (\r\n        <blockquote className=\"blockquote text-right\">\r\n          <p className=\"mb-o\">{quote}</p>\r\n          <footer className=\"blockquote-footer\">{author}</footer>\r\n        </blockquote>\r\n      )}\r\n\r\n      <button className=\"btn btn-primary\" onClick={increment}>\r\n        Next quote\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useCounter = (initialState = 10) => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const increment = () => setState(state + 1);\r\n\r\n  const decrement = () => setState(state - 1);\r\n\r\n  const reset = () => setState(initialState);\r\n\r\n  return {\r\n    state,\r\n    increment,\r\n    decrement,\r\n    reset,\r\n  };\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useFetch = (url) => {\r\n  const [state, setState] = useState({\r\n    data: null,\r\n    loading: true,\r\n    error: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setState({\r\n      data: null,\r\n      loading: true,\r\n      error: null,\r\n    });\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => setState({ data, loading: false, error: null }));\r\n  }, [url]);\r\n\r\n  return state;\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { CounterApp } from \"./CounterApp\";\nimport { MultipleCustomHooks } from \"./quotes/MultipleCustomHooks\";\nimport \"./index.css\";\n\nReactDOM.render(<MultipleCustomHooks />, document.getElementById(\"root\"));\n"],"sourceRoot":""}